name: Android CI

on: [push]

env:
  KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
  RELEASE_SIGN_KEY_ALIAS: ${{ secrets.RELEASE_SIGN_KEY_ALIAS }}
  RELEASE_SIGN_KEY_PASSWORD: ${{ secrets.RELEASE_SIGN_KEY_PASSWORD }}

jobs:
  assemble_ui_test_artifacts:
    name: Build artifacts
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
#     Прогонка юнит-тестов и подготовка артефактов для интерфейсных тестов
      - name: Build APK for UI test after Unit tests
        run: |
          ./gradlew test
          ./gradlew assembleDebug
          ./gradlew assembleCommonDebugAndroidTest
          ./gradlew assembleUsDebugAndroidTest
#     CQ app-debug.apk
      - name: Upload app-debug APK
        uses: actions/upload-artifact@v2
        with:
          name: app-debug
          path: app/build/outputs/apk/common/debug/app-debug.apk

#     CQ app-debug-androidTest.apk
      - name: Upload app-debug-androidTest APK
        uses: actions/upload-artifact@v2
        with:
          name: app-debug-androidTest
          path: app/build/outputs/apk/common/androidTest/debug/app-debug-androidTest.apk

#     Dashly app-debug.apk
      - name: Upload app-debug APK
        uses: actions/upload-artifact@v2
        with:
          name: app-debug
          path: app/build/outputs/apk/us/debug/app-debug.apk

#     Dashly app-debug-androidTest.apk
      - name: Upload app-debug-androidTest APK
        uses: actions/upload-artifact@v2
        with:
          name: app-debug-androidTest
          path: app/build/outputs/apk/us/androidTest/debug/app-debug-androidTest.apk

# Запуск UI-тестов в Firebase Test Lab
  run_ui_tests_on_firebase:
    runs-on: ubuntu-latest
    needs: assemble_ui_test_artifacts
    steps:
      - uses: actions/checkout@v2
      - name: Download app-common-debug APK
        uses: actions/download-artifact@v1
        with:
          name: app-debug

      - name: Download app-common-debug-androidTest APK
        uses: actions/download-artifact@v1
        with:
          name: app-debug-androidTest

      - name: Firebase auth with gcloud
        uses: google-github-actions/setup-gcloud@master
        with:
          version: '290.0.1'
          service_account_key: ${{ secrets.FIREBASE_KEY }}
          project_id: ${{ secrets.FIREBASE_PROJECT_ID }}

      - name: Run Instrumentation Tests in Firebase Test Lab
        run: |
          gcloud firebase test android models list
          gcloud firebase test android run --type instrumentation --use-orchestrator --app app-debug/app-debug.apk --test app-debug-androidTest/app-debug-androidTest.apk --device model=Pixel2,version=28,locale=en,orientation=portrait

  build:
    runs-on: ubuntu-latest
    needs: run_ui_tests_on_firebase
    steps:
      - uses: actions/checkout@v1
      - name: set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
#       - name: Install NDK
#         run: echo "y" | sudo ${ANDROID_HOME}/tools/bin/sdkmanager --install "ndk;20.0.5594570" --sdk_root=${ANDROID_SDK_ROOT}
#       - name: Make gradlew executable
#         run: chmod +x ./gradlew
#       - name: Build with Gradle
#         run: ./gradlew assembleDebug

#     Берем файл keystore из специального отдельного репозитория и кладем его в папку app/keystore
      - name: Checkout keystore repo
        uses: actions/checkout@v2
        with:
          repository: ${{ secrets.KEYSTORE_GIT_REPOSITORY }}
          token: ${{ secrets.KEYSTORE_ACCESS_TOKEN }}
          path: app/keystore
#     Собираем релизные и подписаные apk-файлы для CQ и Dashly
      - name: Build signed APK
        run: |
          ./gradlew test
          ./gradlew assembleRelease
          ./gradlew bundleRelease
#     Выливаем apk-файл для CQ
      - name: Upload CQ APK
        uses: actions/upload-artifact@v2
        with:
          name: app-common-release.apk
          path: app/build/outputs/apk/common/release/app-common-release.apk
#     Выливаем apk-файл для Dashly
      - name: Upload Dashly APK
        uses: actions/upload-artifact@v2
        with:
            name: app-us-release.apk
            path: app/build/outputs/apk/us/release/app-us-release.apk
